package kr.or.ddit.basic;

public class T13_ThreadStopTest {

   /*
    * Thread의 stop() 메소드를 호출하면 쓰레드가 바로 멈춘다. 이 때 사용하던 자원을 정리하지 못하고 프로그램이 종료되어서 나중에
    * 실행되는 프로글매에 영향을 줄 수 있다. 그래서 현재는 stop()은 비추천(Deprecated)으로 되어있다.
    */
   public static void main(String[] args) {
//      ThreadStopEX1 th = new ThreadStopEX1();
//      th.start();

      ThreadStopEX2 th2 = new ThreadStopEX2();
      th2.start();

      try {
         Thread.sleep(300);
      } catch (InterruptedException e) {
         // TODO Auto-generated catch block
         e.printStackTrace();
      }
//      th.setStop(true);
      th2.interrupt(); // 인터럽트 걸기(살짝 꼼수)
   }
}

class ThreadStopEX1 extends Thread {
   private boolean stop;

   public void setStop(boolean stop) {
      this.stop = stop;
   }

   @Override
   public void run() {
      // TODO Auto-generated method stub
      while (!stop) {
         System.out.println("쓰레드 처리 중...");
      }
      System.out.println("자원 정리 중...");
      System.out.println("실행 종료...");
   }
}

// interrupt()를 이용하여 쓰레드를 멈추게 하는 방법
class ThreadStopEX2 extends Thread {

//   @Override
//   public void run() {
//      // 방법1 => sleep()이나 join() 등을 사용했을 때
//      // interrupt()를 호출하면 interruptedException이 발생한다.
//
//      try {
//         while (true) {
//            System.out.println("쓰레드 처리 중...");
//            Thread.sleep(1);
//         }
//      } catch (InterruptedException e) {
//
//      }
//      System.out.println("자원 정리 중...");
//      System.out.println("실행 종료.");
//   }

   @Override
   public void run() {
      // TODO Auto-generated method stub

      // 방법2 => interrupt() 메소드가 호출 되었는지 검사하기

      // 검사 방법 스레드의 인스턴스용 메소드를 이용하는 방법
//      while (true) {
//         System.out.println("쓰레드 처리 중...");
//
//         if (this.isInterrupted()) {
//            System.out.println("인스턴스용 isInterrupted() 호출됨");
//            break;
//         }
//      }

      // 검사방법2 => 스레드의 정적 메소드를 이용하는 방법

      while (true) {
         System.out.println("쓰레드 처리 중...");

         if (Thread.interrupted()) {
            System.out.println("정적메소드 isInterrupted() 호출됨");
            System.out.println("호출 후 : " + Thread.interrupted());
            break;
         }
      }

      System.out.println("자원 정리 중...");
      System.out.println("실행 종료.");
   }
}