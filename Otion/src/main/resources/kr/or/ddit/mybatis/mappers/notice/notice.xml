<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  [[개정이력(Modification Information)]]       -->
<!--  수정일        수정자     수정내용               -->
<!--  ==========   ======    ==============        -->
<!--  2022. 8. 22.     서효림    최초작성               -->
<!--  Copyright (c) 2022 by DDIT All right reserved -->

<mapper namespace="kr.or.ddit.notice.dao.NoticeDAO">
	<sql id="searchNotice">
		WHERE NOTI_DEL_YN = 'N'
		AND NOTI_CLASS_CODE = #{notiClass}
			<trim prefix="AND">
				<if test="pagingVO.simpleCondition neq null and @org.apache.commons.lang3.StringUtils@isNotBlank(pagingVO.simpleCondition.searchWord)">
					<choose>
						<when test="pagingVO.simpleCondition.searchType eq 'id'">
							INSTR(WRITER_ID, #{pagingVO.simpleCondition.searchWord}) > 0
						</when>
						<when test="pagingVO.simpleCondition.searchType eq 'title'">
							INSTR(NOTI_TITLE, #{pagingVO.simpleCondition.searchWord}) > 0
						</when>
						<when test="pagingVO.simpleCondition.searchType eq 'content'">
							INSTR(NOTI_CONTENT, #{pagingVO.simpleCondition.searchWord}) > 0
						</when>
						<otherwise>
							(
									INSTR(WRITER_ID, #{pagingVO.simpleCondition.searchWord}) > 0
								OR	INSTR(NOTI_TITLE, #{pagingVO.simpleCondition.searchWord}) > 0
								OR	INSTR(NOTI_CONTENT, #{pagingVO.simpleCondition.searchWord}) > 0
							)
						</otherwise>
					</choose>
				</if>		
			</trim>
	</sql>
	
	<select id="selectNoticeCount" parameterType="map" resultType="int">
		SELECT COUNT(*)
		FROM TB_NOTICE
		<include refid="searchNotice"/>
	</select>
	
	<select id="selectNoticeList" parameterType="map" resultType="NoticeVO">
		SELECT B.*
		FROM(
			SELECT ROWNUM RNUM, A.*
			FROM(
				SELECT 
					NOTI_NUM
					, NOTI_TITLE
					, WRITER_ID
					, VIEW_NUM
                    , DECODE(NOTI_RANK, 1,'긴급',2,'일반') AS NOTI_RANK
				FROM TB_NOTICE
				<include refid="searchNotice" />
				ORDER BY NOTI_RANK ASC, NOTI_NUM DESC
			)A
		)B
		WHERE RNUM BETWEEN #{pagingVO.startRow} AND #{pagingVO.endRow}
	</select>
	
	<resultMap type="NoticeVO" id="noticeMap" autoMapping="true">
		<id property="notiNum" column="NOTI_NUM" />
		<collection property="attatchList" ofType="AttatchVO" autoMapping="true"/>
	</resultMap>
	
	<select id="selectNotice" parameterType="String" resultMap="noticeMap">
		SELECT 
			A.NOTI_NUM
			, A.WRITER_ID
			, A.NOTI_RANK
			, A.NOTI_TITLE
			, A.NOTI_CONTENT
			, A.VIEW_NUM
			, TO_CHAR(A.NOTI_DATE,'YYYY.mm.dd  HH24:MI') AS NOTI_DATE
			, B.ATTATCH_NUM
			, B.ATTATCH_ORDER
			, B.FILE_PATH
			, B.ORIGIN_NM
			, B.SAVE_NM
			, B.ATTATCH_TYPE
			, B.ATTATCH_SIZE
			, B.ATTATCH_DATE
		FROM TB_NOTICE A
		LEFT OUTER JOIN TB_ATTATCH B ON(A.NOTI_NUM = B.ATTATCH_PLACE)
		WHERE NOTI_NUM = #{notiNum}
		AND NOTI_DEL_YN = 'N'
		
	</select>
	
	<insert id="insertNotice" parameterType="NoticeVO" >
		<selectKey resultType="String" keyProperty="notiNum" order="BEFORE">
			SELECT  FN_CREATE_NUM(TO_CHAR(SYSDATE,'YYMMDD'), 'TB_NOTICE', 'NOTI_NUM', UPPER('NOTI'))
			FROM DUAL
		</selectKey>
		
		INSERT INTO TB_NOTICE (
			NOTI_NUM
			, WRITER_ID
			, NOTI_RANK
			, NOTI_TITLE
			, NOTI_CONTENT
		) VALUES (
			#{notiNum,jdbcType=VARCHAR}
			, #{writerId,jdbcType=VARCHAR}
			, #{notiRank,jdbcType=NUMERIC}
			, #{notiTitle,jdbcType=VARCHAR}
			, #{notiContent,jdbcType=CLOB}
		)
	</insert>
	
	<update id="incrementNotice" parameterType="String">
		UPDATE TB_NOTICE
		SET
			VIEW_NUM = VIEW_NUM+1
		WHERE NOTI_NUM = #{notiNum}
	</update>
	
	<update id="deleteNotice" parameterType="String">
		UPDATE TB_NOTICE
		SET NOTI_DEL_YN = 'Y'
		WHERE NOTI_NUM = #{notiNum}
	</update>
	
	<update id="updateNotice" parameterType="NoticeVO">
		UPDATE TB_NOTICE
		SET
			NOTI_TITLE = #{notiTitle,jdbcType=VARCHAR}
			, NOTI_CONTENT = #{notiContent,jdbcType=CLOB}
			, NOTI_RANK = #{notiRank,jdbcType=NUMERIC}
		WHERE NOTI_NUM = #{notiNum}
	</update>
	
</mapper>